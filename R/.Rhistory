#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
df
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
install.packages("dplyr")
library(ggplot2)
library(gridExtra)
library(dplyr)
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
df
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
library(ggplot2)
library(gridExtra)
library(dplyr)
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
df
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
library(ggplot2)
library(gridExtra)
library(dplyr)
library('psych')
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
df
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
nemas <- c("type", "name", "X2014", "X2015", "X2016", "x2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
df
#1.2
ggplot(df, aes(products, x2017)) +
geom_boxplot()
summary(aov(x2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
library(ggplot2)
library(gridExtra)
library(dplyr)
library("readxl")
library("ggplot2")
library("psych")
library("corrgram")
library("dplyr")
library(plyr)
library(psych)
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
df
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
install.packages("HSAUR2")
library(HSAUR2)
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
library(ggplot2)
library(gridExtra)
library(dplyr)
library(psych)
install.packages("HSAUR2")
library(HSAUR2)
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas; nonproducts
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
df
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
head(df)
str(df)
str(df)
nemas <- c("type", "name", "2014", "2015", "2016", "2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas; nonproducts
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
str(df)
#1.2
ggplot(df, aes(products, "2017")) +
geom_boxplot()
summary(aov("2017" ~ products, data = df))
# p-value > 0.05 => зависимостей нет
nemas <- c("type", "name", "2014", "2015", "2016", y_2017, "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas; nonproducts
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
str(df)
#1.2
ggplot(df, aes(products, y_2017)) +
geom_boxplot()
summary(aov(y_2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
library(ggplot2)
library(gridExtra)
library(dplyr)
library(psych)
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas; nonproducts
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
head(df)
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
str(df)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(psych)
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas; nonproducts
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
str(df)
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
library(ggplot2)
library(gridExtra)
library(dplyr)
library(psych)
#1.1
nemas <- c("type", "name", "X2014", "X2015", "X2016", "X2017", "products")
products <- read.csv("Цены на продовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
products$products <- "product"
names(products) <- nemas; products
nonproducts <- read.csv("Цены на непродовольственные товары.csv", sep = ";", dec = ",", encoding = "UTF-8")
nonproducts$products <- "nonproduct"
names(nonproducts) <- nemas; nonproducts
df <- rbind(products, nonproducts)
df$products <- factor(df$products)
str(df)
#1.2
ggplot(df, aes(products, X2017)) +
geom_boxplot()
summary(aov(X2017 ~ products, data = df))
# p-value > 0.05 => зависимостей нет
#1.3
ggplot(df, aes(X2017, type)) +
geom_boxplot()
summary(aov(X2017 ~ type, data = df))
# p-value < 0.05 => зависимости есть
#1.4
pd <- position_dodge(0.1)
ggplot(df, aes(X2017, type, color = products, group = products)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch = 15) +
theme_bw()
summary(aov(X2017 ~ type * products, data = df))
# p-value < 0.05 => зависимости есть
install.packages("Hmisc")
pd <- position_dodge(0.1)
ggplot(df, aes(X2017, type, color = products, group = products)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch = 15) +
theme_bw()
summary(aov(X2017 ~ type * products, data = df))
# p-value < 0.05 => зависимости есть
# p-value < 0.05 => зависимости есть
df
ggplot(df, aes(X2017, type)) +
geom_boxplot()
ggplot(df, aes(X2017, type, color = products, group = products))
pd <- position_dodge(0.1)
ggplot(df, aes(X2017, type, color = products, group = products)) +
theme_bw()
pd <- position_dodge(0.1)
ggplot(df, aes(X2017, type, color = products, group = products)) +
theme_bw()
ggplot(df, aes(X2017, type, color = products, group = products)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd) +
ggplot(df, aes(X2017, type, color = products, group = products)) +
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch = 15) +
theme_bw()
ggplot(df, aes(X2017, type, color = products, group = products)) +
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.2, lwd = 0.8, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch = 15) +
theme_bw()
ggplot(df, aes(X2017, type, color = products, group = products)) +theme_bw()
pd <- position_dodge(0.1)
ggplot(df, aes(X2017, type, color = products, group = products)) +
stat_summary(fun.data = mean_cl_boot, geom = 'line', size = 1.5, position = pd) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch = 15) +
theme_bw()
ggplot(df, aes(X2017, type, color = products, group = products)) +
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 5, position = pd, pch = 15) +
theme_bw()
ChickWeight
summary(aov(weight ~ (Time * Diet) + Error(Chick / Time) + (Diet), data = ChickWeight))
ChickWeight
summary(aov(weight ~ (Time * Diet)), data = ChickWeight))
summary(aov(weight ~ (Time * Diet)), data = ChickWeight)
ChickWeight
summary(aov(weight ~ (Time * Diet)), data = ChickWeight)
ChickWeight
summary(aov(weight ~ (Time * Diet) + Error(Chick / Time) + (Diet), data = ChickWeight))
ChickWeight
summary(aov(weight ~ (Time * Diet), data = ChickWeight))
ChickWeight
summary(aov(weight ~ (Time * Diet) + Error(Chick / Time) + (Diet), data = ChickWeight))
ChickWeight
ChickWeight
summary(aov(weight ~ (Time * Diet) + Error(Time/Chick) + (Diet), data = ChickWeight))
ChickWeight
summary(aov(weight ~ (Time * Diet) + Error(Chick / Time*Diet) + (Diet), data = ChickWeight))
titanic <- read.csv("titanic.csv")
ggplot(titanic, aes(
x = factor(Survived, labels = c("Умер", "Выжил")),
y = Age,
fill = factor(Survived, labels = c("Умер", "Выжил")))
) +
geom_boxplot() +
guides(fill = guide_legend(title = NULL)) +
xlab(NULL)
ggplot(titanic, aes(
x = factor(Survived, labels = c("Умер", "Выжил")),
y = Age,
fill = factor(Survived, labels = c("Умер", "Выжил")))
) +
geom_boxplot() +
guides(fill = guide_legend())
ggplot(titanic, aes(
x = factor(Survived, labels = c("Умер", "Выжил")),
y = Age,
fill = factor(Survived, labels = c("Умер", "Выжил")))
) +
geom_boxplot() +
guides(fill = guide_legend(title = "Соотношение")) +
xlab = NULL
ggplot(titanic, aes(
x = factor(Survived, labels = c("Умер", "Выжил")),
y = Age,
fill = factor(Survived, labels = c("Умер", "Выжил")))
) +
geom_boxplot() +
guides(fill = guide_legend(title = NULL)) +
xlab(NULL)
df = mtcars
df
library(ggplot2)
library(dplyr)
library(psych)
step(df, direction = "backward")
fit = lm( ~ ., df)
fit = lm(mpg ~ ., df)
step(df, direction = "backward")
step(df, direction = "backward")
mpgьзп
fit = lm(mpg ~ ., df)
step(fit, direction = "backward")
summary(step(fit, direction = "backward"))
#2
pairs(df)
#2
pairs(df)
pairs(df)
ggplot(df, aes(mpg, am)) + geom_point() + geom_smooth()
ggplot(df, aes(mpg) + geom_histogram()
ggplot(df, aes(mpg) + geom_histogram()
ggplot(df, aes(mpg)) + geom_histogram()
ggplot(df, aes(am)) + geom_histogram()
ggplot(df, aes(log(am))) + geom_histogram()
ggplot(df, aes(am)) + geom_histogram()
ggplot(df, aes(mpg, wt) + geom_point() + geom_smooth()
ggplot(df, aes(mpg, wt) + geom_point() + geom_smooth()
ggplot(df, aes(mpg, wt)) + geom_point() + geom_smooth()
ggplot(df, aes(wt)) + geom_histogram()
ggplot(df, aes(ln(wt))) + geom_histogram()
ggplot(df, aes(log(wt))) + geom_histogram()
ggplot(df, aes((wt)) + geom_histogram()
ggplot(df, aes((wt)) + geom_histogram()
ggplot(df, aes(wt)) + geom_histogram()
lm1 = lm(mpg~wt, df)
summary(lm1 = lm(mpg~wt, df))
summary(lm(mpg~wt, df))
summary(lm(mpg~wt + am, df))
summary(step(fit, direction = "backward"))
summary(lm(mpg~wt + am +qsec, df))
summary(lm(mpg~(wt + qsec) * am, df))
summary(lm(mpg~(wt + am) * qsec, df))
summary(lm(mpg~wt + am + qsec, df))
ggplot(df, aes(mpg, wt)) + geom_point() + geom_smooth()
f1 = step(fit, direction = "backward")
f1 = step(fit, direction = "backward")
f2 = lm(mpg~wt + am + qsec, df)
anova(f1,f2)
summary(step(fit, direction = "backward"))
summary(lm(mpg~wt + am + qsec, df))
summary(step(fit, direction = "backward"))
df$lm1_fitted = f2$fitted
df
df$lm1_fitted = f1$fitted
df$lm2_fitted = f2$fitted
df
df$lm1_fitted = f1$fitted
df$lm1_resid = f1$residuals
df
df$lm1_fitted = f1$fitted
df$lm1_resid = f1$residuals
df
ggplot(df, aes(mpg, wt)) + geom_point() + geom_abline(aes(mpg, lm1fitted))
df$lm1_fitted = f1$fitted
df$lm1_resid = f1$residuals
ggplot(df, aes(mpg, wt)) + geom_point() + geom_abline(aes(mpg, lm1_fitted))
df$lm1_fitted = f1$fitted
df$lm1_resid = f1$residuals
ggplot(df, aes(mpg, wt)) + geom_point() + geom_abline(aes(x = mpg, y = lm1_fitted))
df$lm1_fitted = f1$fitted
ggplot(df, aes(mpg, wt)) + geom_point() + geom_line(aes(x = mpg, y = lm1_fitted))
ggplot(df, aes(mpg, wt)) + geom_point() + geom_line(aes(x = lm1_fitted, y = wt))
ggplot(df, aes(mpg, wt)) + geom_point() + geom_line(aes(x = lm1_fitted, y = wt), col = "blue") + geom_line(aes(x = mpg, y = wt), col = "red")
ggplot(df, aes(mpg, wt)) + geom_point() + geom_line(aes(x = lm1_fitted, y = wt), col = "blue") + geom_line(aes(x = mpg, y = wt), col = "red") + geom_smooth()
#3
ggplot(df, aes(lm1_fitted, lm1_resid)) + geom_point()
#3
ggplot(df, aes(lm1_fitted, lm1_resid)) + geom_point() + geom_smooth()
hist(df$lm1_resid)
ggplot(df, aes(lm1_fitted, lm1_resid)) + geom_point() + geom_smooth()
library(readxl)
library("tidyr")
df = read_excel("C:\\Users\\User\\Desktop\\R\\kek_2.xlsx")
fill(df)
View(Amy)
View(arrests)
View(daily)
View(f1)
View(f2)
library(readxl)
library("tidyr")
df = read_excel("C:\\Users\\User\\Desktop\\R\\kek_2.xlsx")
fill(df)
library(readxl)
library("tidyr")
df = read_excel("C:\\Users\\User\\Desktop\\R\\kek_2.xlsx")
fill(df)
library("tidyverse")
library(readxl)
fill(df)
library("tidyverse")
library(readxl)
install.packages("tidyverse")
library("tidyverse")
fill(df)
library(tidyverse)
library(tidyr)
fill(df)
remove.packages("tidyr", lib="~/R/win-library/3.6")
remove.packages("tidyverse", lib="~/R/win-library/3.6")
library(readxl)
install.packages("tidyverse")
library("tidyverse")
df = read_excel("C:\\Users\\User\\Desktop\\R\\kek_2.xlsx")
fill(df)
library(readxl)
library("tidyr")
df = read_excel("C:\\Users\\User\\Desktop\\R\\kek_2.xlsx")
fill(df)
View(df)
fill(df)
library(readxl)
library("tidyr")
install.packages("magrittr")
install.packages("dplyr")
install.packages(ggplot2)
install.packages("readxl")
install.packages("stringr")
library(stringr)
library(readxl)
library(tidyverse)
library(dplyr)
df2 = world_bank_pop
df2
df2 <- df2 %>% pivot_longer(cols = c('2000', '2001', '2002', '2003', '2004', '2005',
'2006', '2007', '2008', '2009', '2010', '2011',
'2012', '2013', '2014', '2015', '2016', '2017'),
names_to = 'Year', values_to = 'value') %>% extract(col = indicator, into = c("area", "variable"), regex = "...(...).(....)")
df2
df2 = world_bank_pop
df2
#1
df = read_excel("C:\\Users\\User\\Desktop\\R\\kek_2.xlsx")
df = df %>% fill(Страна, Округ, .direction = "up" ) #Заполняет вверх, так как у нас сверху пусто, то ничего не сделает
df = df %>% fill(Страна, Округ, .direction = "updown" ) #Заполняет и верх и низ
df = df %>% fill(Страна, Округ, .direction = "down" ) #Заполняет только низ
df = df %>% pivot_longer(cols = c('2005', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018'), names_to = "year", values_to = "population")
df
df1 = tidyr::who
df1
#2
df1 = df1 %>% pivot_longer(cols = new_sp_m014:newrel_f65, names_to = c("diagnosis", "gender", "age"),
names_pattern = "new_?(.*)_(.)0?([1-9]*)", values_to = "Count")
tail(df1)
df1 = df1 %>% pivot_longer(cols = new_sp_m014:newrel_f65, names_to = c("diagnosis", "gender", "age"),
names_pattern = "new_?(.*)_(.)(.*)", values_to = "Count")
#3
df2 = world_bank_pop
df2
df2 <- df2 %>% pivot_longer(cols = c('2000', '2001', '2002', '2003', '2004', '2005',
'2006', '2007', '2008', '2009', '2010', '2011',
'2012', '2013', '2014', '2015', '2016', '2017'),
names_to = 'Year', values_to = 'value') %>% extract(col = indicator, into = c("area", "variable"), regex = "...(...).(....)")
df2
df2 = world_bank_pop
df2
pivot_long
